(define (distinct? items)
  (cond ((null? items) true)
        ((null? (cdr items)) true)
        ((member (car items) (cdr items)) false)
        (else (distinct? (cdr items)))))

(define (exam-rank)
  (define (iter betty ethel joan kitty mary)
    (cond ((= mary 6) (iter betty ethel joan (+ kitty 1) 1))
          ((= kitty 6) (iter betty ethel (+ joan 1) 1 1))
          ((= joan 6) (iter betty (+ ethel 1) 1 1 1))
          ((= ethel 6) (iter (+ betty 1) 1 1 1 1))
          ((= betty 6) (display "No result"))
          ((and (= kitty 2) (= betty 3)) (iter betty ethel joan kitty (+ mary 1)))
          ((and (not (= kitty 2)) (not (= betty 3))) (iter betty ethel joan kitty (+ mary 1)))
          ((and (= ethel 1) (= joan 2)) (iter betty ethel joan kitty (+ mary 1)))
          ((and (not (= ethel 1)) (not (= joan 2))) (iter betty ethel joan kitty (+ mary 1)))
          ((and (= joan 3) (= ethel 5)) (iter betty ethel joan kitty (+ mary 1)))
          ((and (not (= joan 3)) (not (= ethel 5))) (iter betty ethel joan kitty (+ mary 1)))
          ((and (= kitty 2) (= mary 4)) (iter betty ethel joan kitty (+ mary 1)))
          ((and (not (= kitty 2)) (not (= mary 4))) (iter betty ethel joan kitty (+ mary 1)))
          ((and (= mary 4) (= betty 1)) (iter betty ethel joan kitty (+ mary 1)))
          ((and (not (= mary 4)) (not (= betty 1))) (iter betty ethel joan kitty (+ mary 1)))
          ((not (distinct? (list betty ethel joan kitty mary)))
                (iter betty ethel joan kitty (+ mary 1)))
          (else (list (list 'betty betty)
                      (list 'ethel ethel)
                      (list 'joan joan)
                      (list 'kitty kitty)
                      (list 'mary mary)))
          ))
    (iter 1 1 1 1 1)
    )

(exam-rank)

;'((betty 3) (ethel 5) (joan 2) (kitty 1) (mary 4))
